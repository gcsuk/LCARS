@page "/admin/jira"

@inject HttpClient Http

@using LCARS.Data
@using System.ComponentModel.DataAnnotations

@if (settings is null)
{
    <Loading />
}
else
{
    if (error != null)
    {
        <InputError Text="@error" />
    }
    else
    {
        <Header Text="Jira Admin" />
    }
    <EditForm Model=@settings OnValidSubmit=@FormSubmitted OnInvalidSubmit=@InvalidFormSubmitted>
        <DataAnnotationsValidator />
        <div>
            <label>Enabled</label>
            <span></span>
            <InputCheckbox @bind-Value=settings.Enabled />
        </div>
        <div>
            <label>Access Token</label>
            <InputText @bind-Value=settings.AccessToken />
        </div>
        <div>
            <label>Projects</label>
            <InputTextArea @bind-Value=settings.Projects/>
        </div>
        <SaveButton />
    </EditForm>
}

@code {
    string? error;
    JiraModel settings = new();

    public record JiraModel
    {
        public bool Enabled { get; set; }
        [Required]
        public string? AccessToken { get; set; }
        [Required]
        public string? Projects { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        var currentSettings = await Http.GetFromJsonAsync<Settings>("settings");

        settings = new()
            {
                Enabled = currentSettings?.JiraSettings?.Enabled ?? false,
                AccessToken = currentSettings?.JiraSettings?.AccessToken ?? "",
                Projects = string.Join(",", currentSettings?.JiraSettings?.Projects ?? Enumerable.Empty<string>()),
            };
    }

    async Task FormSubmitted(EditContext editContext)
    {
        await Http.PostAsJsonAsync<Settings.JiraSettingsModel>("settings/jira", new Settings.JiraSettingsModel
            {
                Enabled = settings.Enabled,
                AccessToken = settings.AccessToken,
                Projects = settings.Projects.Split(",", StringSplitOptions.RemoveEmptyEntries),
            });
    }

    void InvalidFormSubmitted(EditContext editContext)
    {
        error = "Invalid. Please Try Again.";
    }
}