@page "/bitbucket/pullrequests"
@using LCARS.Data

@implements IDisposable
@inject HttpClient Http

<PageTitle>LCARS | BitBucket | Pull Requests</PageTitle>

<Header Text="BitBucket Pull Requests" />

<PullRequests Data="@pullRequests" @rendermode=InteractiveAuto />

@code {
    private PullRequestSummary? pullRequests;
    private System.Timers.Timer refreshTimer = new(10000);

    protected override async Task OnInitializedAsync()
    {
        await RefreshPullRequests();

        refreshTimer.Elapsed += async (sender, e) => await RefreshPullRequests();
        refreshTimer.Enabled = true;
    }

    private async Task RefreshPullRequests()
    {
        var settings = await Http.GetFromJsonAsync<Settings>("settings");
        var pullRequestData = await Http.GetFromJsonAsync<IEnumerable<PullRequestSummary.PullRequestModel>>("/bitbucket/pullrequests");

        pullRequests = new PullRequestSummary
            {
                Threshold = settings.BitBucketSettings.PullRequestThreshold,
                PullRequests = pullRequestData
            };

        StateHasChanged();
    }

    void IDisposable.Dispose()
    {
        refreshTimer.Enabled = false;
        refreshTimer.Dispose();
    }
}