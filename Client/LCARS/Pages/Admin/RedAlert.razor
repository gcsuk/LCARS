@page "/admin/redalert"

@inject HttpClient Http

@using LCARS.Data
@using System.ComponentModel.DataAnnotations

@if (settings is null)
{
    <Loading />
}
else
{
    if (error != null)
    {
        <InputError Text="@error" />
    }
    else
    {
        <Header Text="Red Alert Admin" />
    }
    <EditForm Model=@settings OnValidSubmit=@FormSubmitted OnInvalidSubmit=@InvalidFormSubmitted>
        <DataAnnotationsValidator />
        <div>
            <label>Enabled</label>
            <InputCheckbox @bind-Value=settings.Enabled />
        </div>
        <div>
            <label>Alert Type</label>
            <InputText @bind-Value=settings.AlertType />
        </div>
        <div>
            <label>End Date</label>
            <InputDate @bind-Value=settings.EndDate/>
        </div>
        <div>
            <label>End Time</label>
            <InputText @bind-Value=settings.EndTime/>
        </div>
        <SaveButton />
    </EditForm>
}

@code {
    string? error;
    SettingsModel settings = new();

    public record SettingsModel
    {
        public bool Enabled { get; set; }
        [Required]
        public string AlertType { get; set; }
        public DateTime? EndDate { get; set; }
        public string? EndTime { get; set; }
    }

    protected override async Task OnInitializedAsync()
    {
        var currentSettings = await Http.GetFromJsonAsync<Settings>("settings");

        settings = new()
            {
                Enabled = currentSettings.RedAlertSettings.Enabled,
                AlertType = currentSettings.RedAlertSettings.AlertType,
                EndDate = currentSettings.RedAlertSettings.EndTime,
                EndTime = currentSettings.RedAlertSettings.EndTime.Value.ToString("HH:mm")
            };
    }

    async Task FormSubmitted(EditContext editContext)
    {
        string endDateTimeString = settings.EndDate.Value.ToString("yyyy-MM-dd") + "T" + settings.EndTime + ":00.000Z";

        if (DateTime.TryParse(endDateTimeString, out var endDateTime))
            await Http.PostAsJsonAsync<Settings.RedAlertSettingsModel>("settings/redalert", new Settings.RedAlertSettingsModel
                {
                    AlertType = settings.AlertType,
                    Enabled = settings.Enabled,
                    EndTime = endDateTime
                });
        else
            error = "Invalid End Time. Please Try Again";
    }

    void InvalidFormSubmitted(EditContext editContext)
    {
        error = "Invalid. Please Try Again.";
    }
}